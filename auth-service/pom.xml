<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Definiert die übergeordnete POM, die für Spring Boot-Initialisierung sorgt -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.4</version>
        <relativePath/> <!-- Lookup der übergeordneten POM im Repository -->
    </parent>

    <!-- Basis-Maven-Projektdefinition -->
    <groupId>de.spring.tutorial</groupId>
    <artifactId>auth-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>auth-service</name>
    <packaging>jar</packaging>
    <description>Auth Service</description>

    <properties>
        <!-- Hier werden verschiedene Versionen für Abhängigkeiten und Plugins definiert -->
        <java.version>23</java.version>
        <spring.boot.version>3.4.4</spring.boot.version>
        <jjwt.version>0.12.6</jjwt.version>
        <commons.version>3.12.0</commons.version>
        <lombok.version>1.18.36</lombok.version>
        <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
        <maven.compiler.version>3.10.1</maven.compiler.version>
        <file.encoding>UTF-8</file.encoding>
    </properties>

    <dependencies>
        <!-- Spring Boot JPA Starter (für Datenbankintegration) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- Spring Boot Web Starter (für REST APIs und Webanwendungen) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- Spring Boot Validation Starter (für die Validierung von Eingabedaten) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- Spring Boot Security Starter (für die Authentifizierung und Sicherheit) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- JWT API (für JSON Web Token Implementierung) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>

        <!-- JWT Implementation (für die konkrete JWT-Implementierung) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- JWT Jackson (für die JSON-Verarbeitung in JWT) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- MySQL Connector (für die Verbindung zur MySQL-Datenbank) -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Apache Commons Lang (für Hilfsklassen und erweiterte Funktionalitäten) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <!-- Lombok (für Reduktion von Boilerplate-Code, z.B. Getter/Setter, Konstruktoren) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Spring Boot Test Starter (für Testen der Spring Boot-Anwendungen) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Resources Plugin (zur Verarbeitung von Ressourcen wie Properties-Dateien) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin.version}</version>
                <configuration>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>

            <!-- Maven Compiler Plugin (zur Konfiguration des Java Compilers) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven Plugin (für das Verpacken und Ausführen der Anwendung) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
            </plugin>
        </plugins>
    </build>

</project>
